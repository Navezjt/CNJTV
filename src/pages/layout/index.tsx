import type { NextPage } from "next";
import Head from "next/head";
import { Monitor } from "../../components/Monitor/Monitor";
import { Source } from "../../sources";
import { camarasSources, tvNacionalSources } from "../../sources/all";

type Col = {
  size?: number;
  source?: Source;
  rows?: Row[];
};

type Row = { cols?: Col[] };

const dummyNodes: Row[] = [
  {
    cols: [
      {
        size: 8,
        source: tvNacionalSources["24HTVN"],
      },
      {
        size: 4,
        rows: [
          {
            cols: [{ source: camarasSources.PLAZAITALIA_CIMA }],
          },
          {
            cols: [
              {
                source: camarasSources["24H1"],
              },
            ],
          },
        ],
      },
    ],
  },
  {
    cols: [
      {
        size: 4,
        source: camarasSources.PLAZAITALIA_CIMA,
      },
      {
        size: 4,
        source: camarasSources.OSORNO_1,
      },
      {
        size: 4,
        source: camarasSources.LEDRIUM_1,
      },
    ],
  },
];

function Col({ col }: { col: Col }) {
  const { rows, source } = col;
  const size = col.size || 12;
  if (source) return <Monitor size={size} source={source} />;

  return (
    <div className={`col-${size}`}>
      {rows?.map((row, i) => (
        <Row key={i} row={row} />
      ))}
    </div>
  );
}

function Row({ row }: { row: Row }) {
  const { cols } = row;
  return (
    <div className="row no-gutters">
      {cols?.map((col, i) => (
        <Col col={col} key={i} />
      ))}
    </div>
  );
}

const MonitorPage: NextPage = () => {
  return (
    <div>
      <Head>
        <title>Monitor</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {dummyNodes.map((row, i) => (
        <Row key={i} row={row} />
      ))}
    </div>
  );
};

export default MonitorPage;
